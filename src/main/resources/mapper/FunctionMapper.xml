<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.server.mapper.FunctionMapper">
    <resultMap id="FunctionMap" type="com.example.server.model.CustomerData">
        <id property="id" column="id"/>
        <id property="userNameId" column="user_name_id"/>
        <id property="userName" column="user_name"/>
        <id property="passWord" column="pass_word"/>
        <id property="createTime" column="create_time"/>
    </resultMap>
    <select id="countUserName" resultType="java.lang.Integer">
        select count(0)
        from project.function_data f
        where f.user_name = #{userName}
    </select>
    <select id="userName" resultMap="FunctionMap">
        select *
        from project.function_data f
        where f.user_name = #{userName}
    </select>
    <insert id="register" parameterType="com.example.server.model.CustomerData">
        insert into project.function_data (user_name_id, user_name, pass_word, create_time)
        values (#{userNameId}, #{userName}, #{passWord}, #{createTime})
    </insert>
    <insert id="registerMoney" parameterType="com.example.server.model.CustomerDataMoney" useGeneratedKeys="true"
            keyProperty="function_money_id">
        insert into project.function_money (user_name_id, user_name, cur_number, ex_money, cur_field_money, show_money,
                                            create_time)
        values (#{userNameId}, #{userName}, '', 0, '', 0, #{createTime})
    </insert>
    <select id="login" resultMap="FunctionMap">
        select *
        from project.function_data f
        where f.user_name = #{userName}
          and f.pass_word = #{passWord}
    </select>
    <update id="edit">
        update project.function_data
        set pass_word   = #{param2},
            update_time = #{param3}
        where user_name_id = #{param1}
    </update>
    <resultMap id="FunctionMoneyMap" type="com.example.server.model.CustomerDataMoney">
        <id property="function_money_id" column="function_money_id"/>
        <id property="userNameId" column="user_name_id"/>
        <id property="userName" column="user_name"/>
        <id property="cur_number" column="cur_number"/>
        <id property="ex_money" column="ex_money"/>
        <id property="cur_field_money" column="cur_field_money"/>
        <id property="show_money" column="show_money"/>
        <id property="createTime" column="create_time"/>
        <id property="update_time" column="update_time"/>
        <id property="currency_name" column="currency_name"/>
        <id property="currency_nation" column="currency_nation"/>
    </resultMap>
    <select id="userId" resultMap="FunctionMoneyMap">
        select *
        from project.function_money
        where user_name_id = #{userNameId}
    </select>
    <update id="save_cur">
        update project.function_money
        set cur_number      = #{param2},
            cur_field_money = #{param3}
        where user_name_id = #{param1}
    </update>
    <select id="userNameId" resultMap="FunctionMoneyMap">
        select *
        from project.function_money fm
                 left join project.currency_json cj on
            fm.cur_number = cj.currency
        where user_name_id = #{user_name_id}
    </select>
    <update id="setNameId" parameterType="map">
        update project.function_money x
        set x.ex_money    = #{ex_money},
            x.show_money  = #{show_money},
            x.update_time = #{update_time}
        where x.user_name_id = #{user_name_id}
    </update>
    <insert id="add" parameterType="com.example.server.model.Ins_del">
        insert into project.ins_del (calendarDetails, ex, expense, income)
        values (#{calendarDetails}, #{ex}, #{expense}, #{income})
    </insert>
    <select id="findAdd" resultType="java.lang.Integer">
        select count(0)
        from project.ins_del
        where calendarDetails = #{calendarDetails}
    </select>
    <select id="findTotleMoney" resultType="com.example.server.model.Ins_del">
        select calendarDetails, income - expense as totleMoney
        from project.ins_del
        where calendarDetails = #{calendarDetails}
    </select>
    <update id="set" parameterType="com.example.server.model.Ins_del">
        update project.ins_del
        set ex     = #{ex},
            expense=#{expense},
            income=#{income}
        where calendarDetails = #{calendarDetails}
    </update>
    <select id="sel" resultType="com.example.server.model.Ins_del">
        select *
        from project.ins_del
        where calendarDetails = #{calendarDetails}
    </select>
    <update id="setTotle" parameterType="map">
        update project.ins_del
        set totleMoney=#{totleMoney}
        where calendarDetails = #{calendarDetails}
    </update>
    <update id="setSecond" parameterType="map">
        update project.ins_del
        <set>
            ex=#{ex},
            <if test="expense != 0">expense=#{expense},</if>
            <if test="income != 0">income=#{income},</if>
        </set>
        where calendarDetails = #{calendarDetails}
    </update>
    <insert id="addIns_DelData" parameterType="com.example.server.model.Ins_del">
        insert into project.ins_del_data (calendarDetails, expense_and_income_number, inputMoney, details)
        values (#{calendarDetails}, #{expense_and_income_number}, #{inputMoney}, #{details})
    </insert>
    <select id="findDatePicker" resultType="com.example.server.model.Ins_del">
        select *
        from project.ins_del_data_expense_and_income_name iddeain
                 inner join project.ins_del_data idd
                            using (expense_and_income_number)
        where calendarDetails between #{DatePickerStart} and #{DatePickerEnd}
    </select>
    <select id="findIns_del" resultType="com.example.server.model.Ins_del">
        select *
        from project.ins_del
        where calendarDetails between #{DatePickerStart} and #{DatePickerEnd}
    </select>
    <select id="setTableDataId" resultType="com.example.server.model.Ins_del">
        select *
        from project.ins_del_data
        where ins_del_data_id =#{ins_del_data_id}
    </select>
    <select id="fins_ins_del_id" resultType="com.example.server.model.Ins_del">
        select *
        from project.ins_del
        where calendarDetails =#{calendarDetails}
    </select>
    <update id="setInputMoney" parameterType="map">
        update project.ins_del_data
        set inputMoney = #{inputMoney}
        where ins_del_data_id = #{ins_del_data_id}
    </update>
    <update id="setIns_del" parameterType="map">
        update project.ins_del
        <set>
            <if test="expense != null">expense=#{expense},</if>
            <if test="income != null">income=#{income},</if>
        </set>
        where ins_del_id = #{ins_del_id}
    </update>
    <select id="findTotleMoneyId" resultType="com.example.server.model.Ins_del">
        select ins_del_id, income - expense as totleMoney
        from project.ins_del
        where ins_del_id = #{ins_del_id}
    </select>
    <update id="setTotleMoneyId" parameterType="map">
        update project.ins_del
        set totleMoney=#{totleMoney}
        where ins_del_id = #{ins_del_id}
    </update>

</mapper>